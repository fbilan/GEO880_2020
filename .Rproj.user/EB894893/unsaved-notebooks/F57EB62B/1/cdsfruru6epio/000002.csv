"0","pkgTest <- function(x)"
"0","  {"
"0","    if (!require(x,character.only = TRUE))"
"0","    {"
"0","      install.packages(x,dep=TRUE)"
"0","        if(!require(x,character.only = TRUE)) stop(""Package not found"")"
"0","    }"
"0","}"
"0","pkgTest(""dplyr"")"
"0","pkgTest(""lubridate"")"
"0","pkgTest(""ggplot2"")"
"0","pkgTest(""raster"")"
"0","pkgTest(""sf"")"
"0","pkgTest(""sp"")"
"0","pkgTest(""leaflet"")"
"0","pkgTest(""tidyverse"")"
"0","pkgTest(""geosphere"")"
"0",""
"0","WGS84 <- ""+init=epsg:4326"""
"0","NAD83 <- ""+init=epsg:6423"""
"0",""
"0","biketrips <- read.csv(""bike-trips-LA-q3.csv"", sep = "","")"
"0","station_dic <- read.csv(""station_table.csv"", sep = "";"")"
"0","station_dic <- station_dic[,1:2] %>% "
"0","  mutate(Station_ID = as.character(Station_ID))"
"0",""
"0","# get rid of trips without coordinates and columns we don't need"
"0","biketrips <- biketrips[!is.na(biketrips$start_lat),]"
"0","biketrips <- biketrips[!is.na(biketrips$end_lat),]"
"0",""
"0","# assign character for each cluster depending on coordinates"
"0","biketrips <- biketrips %>% mutate(cluster_start = ifelse(start_lat > 34.1364, ""B"", ifelse(start_lat < 33.8945, ""C"", ifelse(start_lon > -118.35, ""A"", ""D""))))"
"0","biketrips <- biketrips %>% mutate(cluster_end = ifelse(end_lat > 34.1364, ""B"", ifelse(end_lat < 33.8945, ""C"", ifelse(end_lon > -118.35, ""A"", ""D""))))"
"0",""
"0","## are start and end region the same? yes, only for 3 trips they are different -> focus on cluster a"
"0","biketrips <- biketrips %>% mutate(within = ifelse(cluster_start == cluster_end, TRUE, FALSE))"
"0",""
"0","# add hour, day, month and time to dataset"
"0","biketrips <- biketrips %>% "
"0","  mutate(start_time=as.POSIXct(start_time, format=""%m/%d/%Y %H:%M"")) %>%"
"0","  mutate(start_hour = as.POSIXlt(start_time)$hour) %>%"
"0","  mutate(start_day=floor_date(start_time, unit=""day"")) %>% "
"0","  mutate(start_month=floor_date(start_time, unit=""month"")) %>% "
"0","  mutate(end_time=as.POSIXct(end_time, format=""%m/%d/%Y %H:%M"")) %>%"
"0","  mutate(end_hour = as.POSIXlt(end_time)$hour) %>%"
"0","  mutate(end_day=floor_date(end_time, unit=""day"")) %>% "
"0","  mutate(end_month=floor_date(end_time, unit=""month"")) %>%"
"0","  mutate(start_station = as.character(start_station)) %>%"
"0","  mutate(end_station = as.character(end_station)) %>%"
"0","  mutate(start_lon = as.numeric(start_lon)) %>%"
"0","  mutate(start_lat = as.numeric(start_lat)) %>%"
"0","  mutate(end_lon = as.numeric(end_lon)) %>%"
"0","  mutate(end_lat = as.numeric(end_lat))"
"0",""
"0","# calculate distance (convert to NAD83 and use pythagoras) and bind it to biketrips"
"0","biketrips_start <- biketrips[c(""start_lon"", ""start_lat"")] %>% "
"0","  st_as_sf(coords = c(""start_lon"", ""start_lat""), crs = WGS84) %>% "
"0","  st_transform(crs = NAD83)"
"0","biketrips_end <- biketrips[c(""end_lon"", ""end_lat"")] %>% "
"0","  st_as_sf(coords = c(""end_lon"", ""end_lat""), crs = WGS84) %>% "
"0","  st_transform(crs = NAD83)"
"0","biketrips_dist <- st_coordinates(biketrips_start) %>% "
"0","  cbind(st_coordinates(biketrips_end))"
"0","colnames(biketrips_dist) <- c(""x1"", ""y1"", ""x2"", ""y2"")"
"0","biketrips_dist <- as.data.frame(biketrips_dist) %>% mutate(distance = sqrt((x1-x2)**2 + (y1-y2)**2)/1000)"
"0","biketrips <- biketrips %>% cbind(distance = biketrips_dist$distance) %>% mutate(velocity = distance / duration*60)"
"0",""
"0","bike_start_sf <- biketrips %>% st_as_sf(coords = c(""start_lon"", ""start_lat""), crs = WGS84)"
"0",""
"0",""
"0","# Create dataset of cluster A to continue working"
"0","biketrips_a <- biketrips %>% filter(cluster_start == ""A"" & within == TRUE)"
"0",""
"0","## Create overview map"
"0","pal <- colorFactor(c(""navy"", ""red"", ""yellow"", ""orange""), domain = c(""A"", ""B"", ""C"", ""D""))"
"0","content <- paste(""Cluster: "", bike_start_sf$cluster_start)"
"0","overview <- leaflet(bike_start_sf) %>% "
"0","  addProviderTiles(providers$CartoDB.Positron, options = providerTileOptions(opacity = 0.6)) %>%"
"0","  addRectangles("
"0","      lng1=min(biketrips_a$start_lon)-0.02, lat1=min(biketrips_a$start_lat)-0.02,"
"0","      lng2=max(biketrips_a$start_lon)+0.02, lat2=max(biketrips_a$start_lat)+0.02,"
"0","      fillColor = ""transparent"", popup = ""Research Area: Cluster A"") %>%"
"0","  addCircleMarkers(color = ~pal(cluster_start), radius = 1, popup = content)"
"0","overview"
